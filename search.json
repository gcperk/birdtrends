[{"path":"https://ninoxconsulting.github.io/birdtrends/articles/Getting_started.html","id":"getting-set-up","dir":"Articles","previous_headings":"","what":"Getting set-up","title":"Getting_started","text":"Install birdtrends Set modelling connections. birdtrends package uses cmdstanr package run hierarchical GAM models using Stan. can install cmdstanr : cmdstanr package turn requires cmdstan program run Stan programs. can use cmdstanr package cmdstan: check cmdstan installed properly:","code":"remotes::install_github(\"ninoxconsulting/birdtrends\") install.packages(\"cmdstanr\", repos = c(\"https://mc-stan.org/r-packages/\",                                        getOption(\"repos\"))) cmdstanr::install_cmdstan() cmdstanr::check_cmdstan_toolchain()"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://ninoxconsulting.github.io/birdtrends/articles/Using-annual-indices-datasets.html","id":"set-up","dir":"Articles","previous_headings":"","what":"1. Set-up","title":"Use annual indices and uncertainty to estimate trends over time","text":"Lets start loading libraries required.","code":"library(birdtrends) library(ggplot2) library(mgcv) library(dplyr) library(tidyr)"},{"path":"https://ninoxconsulting.github.io/birdtrends/articles/Using-annual-indices-datasets.html","id":"model-the-annual-indices-based-on-input-data-of-observed-annual-indices-","dir":"Articles","previous_headings":"","what":"2. Model the annual indices based on input data of observed annual indices.","title":"Use annual indices and uncertainty to estimate trends over time","text":"many cases, may access breadth information retained estimating original modeled annual indices. example data set provided within package. annual estimate Pacific Wren (” “), generated using bbsBayes2 package. data kindly provided .C. Smith. example data set annual index 1968 2022, along credible intervals 2.5% 97.5%.","code":"head(annual_indicies_data) #> # A tibble: 6 × 4 #>    year index index_q_0.025 index_q_0.975 #>   <dbl> <dbl>         <dbl>         <dbl> #> 1  1968  2.70          1.90          3.85 #> 2  1969  2.37          1.70          3.29 #> 3  1970  2.80          2.09          3.79 #> 4  1971  3.09          2.29          4.18 #> 5  1972  3.32          2.49          4.42 #> 6  1973  3.79          3.04          4.77"},{"path":"https://ninoxconsulting.github.io/birdtrends/articles/Using-annual-indices-datasets.html","id":"fit-a-bayesian-heirachial-gam-hgam","dir":"Articles","previous_headings":"2. Model the annual indices based on input data of observed annual indices.","what":"2.1 Fit a Bayesian Heirachial GAM (HGAM)","title":"Use annual indices and uncertainty to estimate trends over time","text":"can fit hierarchical Bayesian General Additive Model (HGAM) estimate overall trend species years, specific date range. model fits smooth time-series function (.e., GAM) log-transformed annual estimates relative abundance, accounting uncertainty annual estimate (.e., Hierarchical aspect). measurement-error model assumes independence errors annual estimate. independence assumption false many sets estimates (e.g., estimates drawn model includes explicit temporal structure), making independence assumption reasonable absence known autocorrelation structure annual errors.","code":"indat1 <- annual_indicies_data  fitted_data <- fit_hgam(indat1, start_yr = NA, end_yr = NA, n_knots = NA) #> Running MCMC with 4 parallel chains... #>  #> Chain 1 finished in 2.0 seconds. #> Chain 4 finished in 2.1 seconds. #> Chain 2 finished in 2.2 seconds. #> Chain 3 finished in 2.2 seconds. #>  #> All 4 chains finished successfully. #> Mean chain execution time: 2.1 seconds. #> Total execution time: 2.3 seconds. #fitted_data <- fit_hgam(indat1, start_yr = 1990, end_yr = 2014, n_knots = NA)"},{"path":"https://ninoxconsulting.github.io/birdtrends/articles/Using-annual-indices-datasets.html","id":"explore-the-results","dir":"Articles","previous_headings":"2. Model the annual indices based on input data of observed annual indices.","what":"2.2 Explore the results","title":"Use annual indices and uncertainty to estimate trends over time","text":"Select subset fitted HGAM models reformat long format. example selected 100 rows simplicity. can reformat original data use plot Now can plot predicted posterior distributions 100 draws, along raw annual indices data provided.","code":"sel_hgams <- fitted_data %>%   dplyr::slice_sample(., n = 100) %>%     dplyr::mutate(draw = seq(1, 100, 1)) %>%    tidyr::pivot_longer(., cols = !starts_with(\"d\")) |>    dplyr::mutate(yearn = as.integer(name) - min(as.integer(name))) min_year <- as.numeric(min(sel_hgams$name)) max_year <- as.numeric(max(sel_hgams$name))  indat1 <- indat1 |>    filter(year >= min_year & year <= max_year)%>%   dplyr::mutate(yearn = as.integer(year) - min(as.integer(year))) comp_plot <- ggplot2::ggplot(data = sel_hgams,                     ggplot2::aes(x = yearn,y = value,                         group = draw, colour = draw))+   ggplot2::geom_pointrange(data = indat1,                   ggplot2::aes(x = yearn, y = index,                       ymin = index_q_0.025,                       ymax = index_q_0.975),                   inherit.aes = FALSE,                   alpha = 0.3)+   ggplot2::geom_line(alpha = 0.3)+   ggplot2::scale_colour_viridis_c() +   ggplot2::scale_y_continuous(trans = \"log10\")+   ggplot2::theme_bw() comp_plot"},{"path":"https://ninoxconsulting.github.io/birdtrends/articles/Using-annual-indices-datasets.html","id":"estimate-trends","dir":"Articles","previous_headings":"","what":"3. Estimate trends","title":"Use annual indices and uncertainty to estimate trends over time","text":"can use modeled values estimate trend given period time. can used predict future. First need reformat fitted data. can modify object ‘sel_hgams’ reformat raw output. convert data long form, following columns “draw”, “year”, “proj_y”. Note using output “fit_hgam” can use code . creates dataset row contains estimated indices per year per posterior draw (n = 4000). Now can estimate trend based given time internal method estimating trends. dates specified, minimum maximum years used. Two methods available estimate trends; 1) Geometric mean 2) Linear regression. can summarise trend estimates provide median confidence internal","code":"ldf <- tibble::rowid_to_column(fitted_data, \"draw\") %>%     tidyr::pivot_longer(., cols = !starts_with(\"d\")) %>%     dplyr::rename('year' = name, \"proj_y\" = value)%>%     dplyr::mutate(year = as.integer(year)) head(ldf) #> # A tibble: 6 × 3 #>    draw  year proj_y #>   <int> <int>  <dbl> #> 1     1  1968   2.70 #> 2     1  1969   2.86 #> 3     1  1970   3.03 #> 4     1  1971   3.22 #> 5     1  1972   3.44 #> 6     1  1973   3.70 trend_sm <- get_trend(ldf, start_yr = 2014, end_yr = 2022, method = \"gmean\") head(trend_sm) #> # A tibble: 6 × 3 #>    draw trend_log perc_trend #>   <int>     <dbl>      <dbl> #> 1     1   0.00108      0.108 #> 2     2  -0.0249      -2.46  #> 3     3  -0.0151      -1.50  #> 4     4  -0.0183      -1.81  #> 5     5  -0.00842     -0.839 #> 6     6  -0.0190      -1.88 trend_sm |>    dplyr::mutate(trend_q0.025 = quantile(trend_log, 0.025),          trend_q0.500 = quantile(trend_log,0.500),          trend_q0.975 = quantile(trend_log,0.975)) |>    dplyr::select(c(trend_q0.025, trend_q0.500, trend_q0.975)) |>    distinct() #> # A tibble: 1 × 3 #>   trend_q0.025 trend_q0.500 trend_q0.975 #>          <dbl>        <dbl>        <dbl> #> 1      -0.0353      -0.0143      0.00646"},{"path":"https://ninoxconsulting.github.io/birdtrends/articles/Using-annual-indices-datasets.html","id":"predict-trend","dir":"Articles","previous_headings":"","what":"4. Predict trend","title":"Use annual indices and uncertainty to estimate trends over time","text":"can now use modeled annual indices estimated trends given years predict future.","code":"preds_sm <- predict_trend(ldf, trend_sm, start_yr = 2023, proj_yr = 2050) #> hold tight, running the numbers! #> ================================================================================ head(preds_sm) #> # A tibble: 6 × 4 #>    draw  year proj_y pred_ind #>   <int> <dbl>  <dbl>    <dbl> #> 1     1  1968   2.70     2.70 #> 2     1  1969   2.86     2.86 #> 3     1  1970   3.03     3.03 #> 4     1  1971   3.22     3.22 #> 5     1  1972   3.44     3.44 #> 6     1  1973   3.70     3.70"},{"path":"https://ninoxconsulting.github.io/birdtrends/articles/Using-annual-indices-datasets.html","id":"plot-the-prediction","dir":"Articles","previous_headings":"","what":"5. Plot the prediction","title":"Use annual indices and uncertainty to estimate trends over time","text":"Now lets plot results, make “pretty plot” use steps worked . includes 1) raw observed indices, 2) modeled indices, 3) predicted indices generated trends.","code":"hgams_plot <- plot_trend(raw_indices = indat1,                            model_indices = ldf,                            pred_indices = preds_sm,                           start_yr = 2014,                            end_yr = 2022)"},{"path":"https://ninoxconsulting.github.io/birdtrends/articles/Using-annual-indices-datasets.html","id":"additional-targets-and-trend-estimates","dir":"Articles","previous_headings":"","what":"Additional targets and trend estimates","title":"Use annual indices and uncertainty to estimate trends over time","text":"may also want track predictions tracking relation short term trends. example species identified partners flight short long term trends. example may identify population change given time step (.e. 2014) short long term trend percentage change population. example may short term target 2024 range -2% 1% can calculate annual index targets range . can added plots identify range need meet predictions tracking.","code":"index_baseline <- get_targets(model_indices = ldf,                                ref_year = 2014,                                st_year = 2026,                                st_lu_target_pc = -2,                               st_up_target_pc = 1,                                lt_year = 2046,                                lt_lu_target_pc = 5,                               lt_up_target_pc = 10) hgams_plot_target <- plot_trend(raw_indices = indat1,                            model_indices = ldf,                            pred_indices = preds_sm,                           start_yr = 2014,                            end_yr = 2022,                            ref_yr = 2014,                           targets = index_baseline)"},{"path":"https://ninoxconsulting.github.io/birdtrends/articles/Using-annual-indices-datasets.html","id":"estimate-confidence-of-reaching-targets","dir":"Articles","previous_headings":"","what":"Estimate confidence of reaching targets","title":"Use annual indices and uncertainty to estimate trends over time","text":"can use output trends estimate uncertainty around meeting future trends. example can estimate probability meet short- term long-term targets. theoretical targets example short term (decrease 2% increase 1%) longterm target (2046) (increase 5 10% )","code":"prop_st <- calculate_probs(predicted_trends = preds_sm,                 ref_year = 2014,                  targ_year = 2026,                  prob_decrease = 2,                 prob_increase = 1)  prop_lt <- calculate_probs(predicted_trends = preds_sm,                 ref_year = 2014,                  targ_year = 2046,                 prob_increase = c(5,10))   prop_st #> # A tibble: 1 × 4 #>   prob_decrease_2_percent prob_increase_1_percent ref_year target_yr #>                     <dbl>                   <dbl>    <dbl>     <dbl> #> 1                    88.9                    7.18     2014      2026 prop_lt  #> # A tibble: 1 × 4 #>   prob_increase_5_percent prob_increase_10_percent ref_year target_yr #>                     <dbl>                    <dbl>    <dbl>     <dbl> #> 1                     6.1                     5.03     2014      2046     # predicted_trends = preds_sm # calc_quantiles <- stats::quantile # quantiles = c(0.025, 0.05, 0.25, 0.75, 0.95, 0.975) # prob_decrease = c(0,2,50) # prob_increase = c(0,2,50) #  #  #  #  # calc_prob_crease <- function(x, p, type = \"decrease\") { #   if(type == \"decrease\") f <- function(p) length(x[x < (-1 * p)]) / length(x) #   if(type == \"increase\") f <- function(p) length(x[x > p]) / length(x) #    #   vapply(p, FUN = f, FUN.VALUE = 1.1) %>% #     stats::setNames(paste0(\"prob_\", type, \"_\", p, \"_percent\")) # } #  #  #  #  # # for each draw subtract target year from ref year (2024) - 2014 # aa <- filter(predicted_trends, year %in% c(2014, 2024)) |>  #   select(-proj_y) #    #  # aa <-  pivot_wider(aa, values_from = pred_ind, names_from = year) #  # ab <- aa |>  #   mutate(ch = `2024`/`2014`) |>  #   rowwise() |>  #   mutate(ch_pc = 100 * (stats::median(ch) -1)) |>  #   dplyr::ungroup() %>% #   mutate(percent_change_ave = 100 * (stats::median(ch)-1), #         #percent_change_q_0.025 = 100 *  (stats::quantile(ch, probs = 0.025)-1), #         #percent_change_q_0.05 = 100 *  (stats::quantile(ch, probs = 0.05)-1), #         #percent_change_q_0.25 = 100 *  (stats::quantile(ch, probs = 0.25)-1), #         #percent_change_q_0.75 = 100 *  (stats::quantile(ch, probs = 0.75)-1), #         #percent_change_q_0.95 = 100 *  (stats::quantile(ch, probs = 0.95)-1), #         percent_change_q_0.975 = 100 *  (stats::quantile(ch, probs = 0.975)-1)) #   #   #  # # Model conditional probabilities of population change during trends period #   if(!is.null(prob_decrease)) { #     ab <- ab %>% #       dplyr::mutate( #         pch_pp = purrr::map_df(.data$ch_pc, calc_prob_crease, #                                .env$prob_decrease, type = \"decrease\")) %>% #       tidyr::unnest(\"pch_pp\")  #   } #    #   if(!is.null(prob_increase)){ #     ab <- ab %>% #       dplyr::mutate( #         pch_pp = purrr::map_df(.data$ch_pc, calc_prob_crease, #                                .env$prob_increase, type = \"increase\")) %>% #       tidyr::unnest(\"pch_pp\")  #   } #    #  # # filter and select only sections needed.  #   #  out <- ab |>  #   mutate(across(starts_with(\"prob\"), ~ sum(.x, na.rm = TRUE)/length(.x)*100)) %>%  #   select(starts_with(\"p\"))%>%  #    distinct() #"},{"path":"https://ninoxconsulting.github.io/birdtrends/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Genevieve Perkins. Author, maintainer. Adam C. Smith. Author.","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Perkins G, Smith (2024). birdtrends: Estimate Trends Based Modelled Annual Indices Related Inputs. R package version 0.0.0.9000, https://ninoxconsulting.github.io/birdtrends/, https://github.com/ninoxconsulting/birdtrends.","code":"@Manual{,   title = {birdtrends: Estimate Trends Based On Modelled Annual Indices Or Related Inputs},   author = {Genevieve Perkins and Adam C. Smith},   year = {2024},   note = {R package version 0.0.0.9000, https://ninoxconsulting.github.io/birdtrends/},   url = {https://github.com/ninoxconsulting/birdtrends}, }"},{"path":"https://ninoxconsulting.github.io/birdtrends/index.html","id":"birdtrends","dir":"","previous_headings":"","what":"Estimate Trends Based On Modelled Annual Indices Or Related Inputs","title":"Estimate Trends Based On Modelled Annual Indices Or Related Inputs","text":"goal birdtrends package provide flexible toolkit estimate population trends (based annual indices uncertainty similar data inputs), predict future trends, compare temporal trends time.","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/index.html","id":"data-input-types","dir":"","previous_headings":"","what":"Data Input Types","title":"Estimate Trends Based On Modelled Annual Indices Or Related Inputs","text":"package currently accommodates three types input data: Annual indices relative abundance CI estimates (.e. index, upper lower confidence interval) Matrix estimated index based Bayesian modeled posterior draws (rows) year (columns) representing full annual indices relative abundance. Matrix posterior draws (rows) year (columns) based smoothed annual indices relative abundance.","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/index.html","id":"estimating-annual-indices","dir":"","previous_headings":"","what":"Estimating annual indices","title":"Estimate Trends Based On Modelled Annual Indices Or Related Inputs","text":"Depending input data type, various methods available estimate trend given time period. Note case datatype 3 already represents modeled smooth generated original modeled relative population abundance. data input 1: can fit hierarchical Bayesian General Additive Model (HGAM), using annual indices uncertainty values. data input 2: can fit GAM posterior draw data input 3: data represents smoothed output can used directly trend assessment.","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/index.html","id":"estimate-trend-between-given-time-points","dir":"","previous_headings":"","what":"Estimate trend between given time points","title":"Estimate Trends Based On Modelled Annual Indices Or Related Inputs","text":"can use two time points estimate trend. default method uses geometric mean estimate average change values time period. Alternatively can assess trend based linear regression two points.","code":""},{"path":[]},{"path":"https://ninoxconsulting.github.io/birdtrends/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Estimate Trends Based On Modelled Annual Indices Or Related Inputs","text":"can install development version birdtrends GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"ninoxconsulting/birdtrends\")"},{"path":"https://ninoxconsulting.github.io/birdtrends/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Estimate Trends Based On Modelled Annual Indices Or Related Inputs","text":"basic example shows solve common problem:","code":"#library(birdtrends) ## basic example code"},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/annual_indicies_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Pacific Wren annual indices from 1968 to 2022 — annual_indicies_data","title":"Pacific Wren annual indices from 1968 to 2022 — annual_indicies_data","text":"example annual indices Pacific Wren","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/annual_indicies_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pacific Wren annual indices from 1968 to 2022 — annual_indicies_data","text":"","code":"annual_indicies_data"},{"path":[]},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/annual_indicies_data.html","id":"annual-indicies-data","dir":"Reference","previous_headings":"","what":"annual_indicies_data","title":"Pacific Wren annual indices from 1968 to 2022 — annual_indicies_data","text":"tibble 55 rows 4 columns: year year indices index annual index index_q_0.025 confidence interval 2.5% index_q_0.975 confidence interval 97.5%","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/annual_indicies_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Pacific Wren annual indices from 1968 to 2022 — annual_indicies_data","text":"https://github.com/bbsBayes/bbsBayes2/tree/main","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/birdtrends-package.html","id":null,"dir":"Reference","previous_headings":"","what":"birdtrends: Estimate Trends Based On Modelled Annual Indices Or Related Inputs — birdtrends-package","title":"birdtrends: Estimate Trends Based On Modelled Annual Indices Or Related Inputs — birdtrends-package","text":"package provides flexible framework generate trends, based actual modeled annual indices data. package designed undertake assessment 2016 Partners Flight Landbird Conservation objectives.","code":""},{"path":[]},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/birdtrends-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"birdtrends: Estimate Trends Based On Modelled Annual Indices Or Related Inputs — birdtrends-package","text":"Maintainer: Genevieve Perkins genevieve.c.perkins@gmail.com (ORCID) Authors: Adam C. Smith adam.smith2@canada.ca","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/calculate_probs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate probability of meeting targets — calculate_probs","title":"Calculate probability of meeting targets — calculate_probs","text":"Calculate probability meeting targets","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/calculate_probs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate probability of meeting targets — calculate_probs","text":"","code":"calculate_probs(   predicted_trends = preds_sm,   ref_year = 2014,   targ_year = 2026,   prob_decrease = NULL,   prob_increase = NULL )"},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/calculate_probs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate probability of meeting targets — calculate_probs","text":"predicted_trends tibble draws, years, predicted trends, output predict_trend function ref_year numeric year change measured .e. 2014 targ_year numeric year target reached .e. 2026 prob_decrease numeric vector predicted target increase. .e c(25, 35). Determine probability trend increase 25% 35% target year prob_increase numeric vector predicted target decrease. .e c(25, 35). Determine probability trend decline 25% 35% target year","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/calculate_probs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate probability of meeting targets — calculate_probs","text":"tibble average percent change addition probability increase decrease","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/calculate_probs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate probability of meeting targets — calculate_probs","text":"","code":"if (FALSE) {   test_st <- calculate_probs(predicted_trends = preds_sm,         ref_year = 2014,         targ_year = 2026,         prob_increase = c(targ$st_pop_pc_lower,targ$st_pop_pc_uppper)) }"},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/fit_gam.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit gam models on posterior draws — fit_gam","title":"Fit gam models on posterior draws — fit_gam","text":"Fit gam models posterior draws","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/fit_gam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit gam models on posterior draws — fit_gam","text":"","code":"fit_gam(indata, start_yr = NA, end_yr = NA, n_knots = NA)"},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/fit_gam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit gam models on posterior draws — fit_gam","text":"indata dataframe posterior draws. column year, row posterior draw start_yr numeric year start model. Default first year available end_yr numeric year end model. Default last year available n_knots number knots used gam model, default 5","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/fit_gam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit gam models on posterior draws — fit_gam","text":"dataframe predicted","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/fit_gam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit gam models on posterior draws — fit_gam","text":"","code":"if (FALSE) { pred_dataset <- fit_gam(indat2, start_yr = 1990, end_yr = 2020, n_knots = 14) }"},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/fit_hgam.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit hierarchical GAM using annual indices and confidence interval — fit_hgam","title":"Fit hierarchical GAM using annual indices and confidence interval — fit_hgam","text":"Fit hierarchical GAM using annual indices confidence interval","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/fit_hgam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit hierarchical GAM using annual indices and confidence interval — fit_hgam","text":"","code":"fit_hgam(indata, start_yr = NA, end_yr = NA, n_knots = 5)"},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/fit_hgam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit hierarchical GAM using annual indices and confidence interval — fit_hgam","text":"indata dataframe annual indices year (row) ansd confidence intervals start_yr numeric year start model. Default first year available end_yr numeric year end model. Default last year available n_knots number knots used HGAM model, default 5","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/fit_hgam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit hierarchical GAM using annual indices and confidence interval — fit_hgam","text":"dataframe modelled HGAM indices given years","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/fit_hgam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit hierarchical GAM using annual indices and confidence interval — fit_hgam","text":"","code":"if (FALSE) { outsmooth <- fit_hgam(indata = indat1, start_yr = 1970, end_yr = 2020, n_knots = 5) }"},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/fit_smooths.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Smooths from BBS model run — fit_smooths","title":"Extract Smooths from BBS model run — fit_smooths","text":"Extract Smooths BBS model run","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/fit_smooths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Smooths from BBS model run — fit_smooths","text":"","code":"fit_smooths(indata, start_yr = NA, end_yr = NA)"},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/fit_smooths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Smooths from BBS model run — fit_smooths","text":"indata dataframe generated smooths. column year, row predicted smooth start_yr numeric year start, subset required. Default last year available end_yr numeric year end, subset required. Default last year available","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/fit_smooths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Smooths from BBS model run — fit_smooths","text":"dataframe smooths generated year selected range","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/fit_smooths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Smooths from BBS model run — fit_smooths","text":"","code":"if (FALSE) { smooths <- fit_smooths(indat3, start_yr = 1990, end_yr = 2020) }"},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/get_targets.html","id":null,"dir":"Reference","previous_headings":"","what":"Get target values for plotting — get_targets","title":"Get target values for plotting — get_targets","text":"Get target values plotting","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/get_targets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get target values for plotting — get_targets","text":"","code":"get_targets(   model_indices = ldf,   ref_year = 2014,   st_year = 2026,   st_lu_target_pc = -2,   st_up_target_pc = 1,   lt_year = NA,   lt_lu_target_pc = NA,   lt_up_target_pc = NA )"},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/get_targets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get target values for plotting — get_targets","text":"model_indices tibble estimated indices drawn fit_* function. Columns draw, year, proj_y ref_year numeric year targets compared , default = 2014 st_year numeric short term year targets estimated st_lu_target_pc numeric lower confidence interval percentage short term population change reference year st_year st_up_target_pc numeric upper confidence interval percentage short term population change reference year st_year lt_year numeric long term year targets estimated lt_lu_target_pc numeric lower confidence interval percentage long term population change reference year lt_year lt_up_target_pc numeric upper confidence interval percentage long term population change reference year lt_year","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/get_targets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get target values for plotting — get_targets","text":"tibble upper lower target values","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/get_targets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get target values for plotting — get_targets","text":"","code":"if (FALSE) {   hgams_plot <- get_targets(model_indices = ldf, ref_year = 2014,   st_year = 2026, st_lu_target_pc = -2,st_up_target_pc = 1,    lt_year = 2046,  lt_lu_target_pc = 5,lt_up_target_pc = 15) }"},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/get_trend.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate trend based based on multiple draws of annual indices — get_trend","title":"Generate trend based based on multiple draws of annual indices — get_trend","text":"Generate trend based based multiple draws annual indices","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/get_trend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate trend based based on multiple draws of annual indices — get_trend","text":"","code":"get_trend(proj_data, start_yr = NA, end_yr = NA, method = \"gmean\")"},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/get_trend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate trend based based on multiple draws of annual indices — get_trend","text":"proj_data tibble estimated indices drawn fit_* function. Columns draw, year, proj_y start_yr numeric value first year trend calculated. Default first available year within dataset end_yr numeric vlaue representing last year trend calculated. Default first available year within dataset method character method used calculate trend. Two methods available; geometric mean (\"gmean\" default )\"lm\" linear regression","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/get_trend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate trend based based on multiple draws of annual indices — get_trend","text":"tibble estimated trend percent_trend draw","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/get_trend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate trend based based on multiple draws of annual indices — get_trend","text":"","code":"if (FALSE) {  ldf_smooths <- tibble::rowid_to_column(fitted_smooths, \"draw\") %>%       tidyr::pivot_longer(., cols = !starts_with(\"d\")) %>%       dplyr::rename('year' = name, \"proj_y\" = value)%>%       dplyr::mutate(year = as.integer(year))  trend_sm <- get_trend(ldf_smooths, start_yr = 2014, end_yr = 2022, method = \"gmean\") }"},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/plot_trend.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot predicted trends — plot_trend","title":"Plot predicted trends — plot_trend","text":"Plot predicted trends","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/plot_trend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot predicted trends — plot_trend","text":"","code":"plot_trend(   raw_indices = indat1,   model_indices = ldf,   pred_indices = preds_sm,   start_yr = 2014,   end_yr = 2022,   ref_yr = 2014,   targets = NULL )"},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/plot_trend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot predicted trends — plot_trend","text":"raw_indices tibble raw annual index value observed data columns = year, index, index_q_0.25 = 2.5% confidence interval index_q_0.975 = 97.5 % confidence interval model_indices tibble estimated indices drawn fit_* function. Columns draw, year, proj_y pred_indices datatable modeled predicted values future start_yr numeric value first year trend calculated. Default first available year within dataset end_yr numeric value representing last year trend calculated. Default first available year within dataset ref_yr numeric value representing reference year trends compared , default 2014 pif calculations targets optional tibble short term targets generated get_targets()","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/plot_trend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot predicted trends — plot_trend","text":"plot","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/plot_trend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot predicted trends — plot_trend","text":"","code":"if (FALSE) {   hgams_plot <- plot_trend(raw_indices = input_option_1, model_indices = ldf_hgam,   pred_indices = preds_hgam, start_yr = 2014, end_yr = 2022) }"},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/predict_trend.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict generated trends into the future — predict_trend","title":"Predict generated trends into the future — predict_trend","text":"Predict generated trends future","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/predict_trend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict generated trends into the future — predict_trend","text":"","code":"predict_trend(proj_output, trend_output, start_yr = NA, proj_yr = 2046)"},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/predict_trend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict generated trends into the future — predict_trend","text":"proj_output tibble estimated indices drawn fit_* function. Columns draw, year, proj_y trend_output tibble estimated trends generated get_trends* function. start_yr numeric year first projected date proj_yr numeric year trend projected","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/predict_trend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict generated trends into the future — predict_trend","text":"datatable modeled predicted values future","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/predict_trend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict generated trends into the future — predict_trend","text":"","code":"if (FALSE) {  trend_sm <- predict_trend(ldf_smooths, trend_sm, start_yr = 2023, proj_yr = 2046) }"},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/prep_hgam.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare GAM components for running stan model — prep_hgam","title":"Prepare GAM components for running stan model — prep_hgam","text":"Prepare GAM components running stan model","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/prep_hgam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare GAM components for running stan model — prep_hgam","text":"","code":"prep_hgam(   orig.preds = NA,   nknots = 6,   predpoints = NULL,   npredpoints = 100,   sm_name = \"year\" )"},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/prep_hgam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare GAM components for running stan model — prep_hgam","text":"orig.preds vector years modeled nknots numeric value number knots model predpoints values predicted. Default NULL npredpoints number values predicted. Default 100 sm_name name model column outputs, default \"year","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/prep_hgam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare GAM components for running stan model — prep_hgam","text":"list containing components  GAM model run within STAN","code":""},{"path":"https://ninoxconsulting.github.io/birdtrends/reference/prep_hgam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare GAM components for running stan model — prep_hgam","text":"","code":"if (FALSE) { aa <- prep_hgam(out$year, nknots = 6, predpoints = NULL, npredpoints = 100, sm_name = \"year\") }"}]
